проект телеграм бот:
структура папок:
parser_bot_tel/
├── bot.py                # Точка входу, запуск бота
├── config.py             # Налаштування (токен, шляхи, константи)
├── handlers/             # Обробники команд та повідомлень
│   ├── __init__.py
│   ├── start.py
│   ├── add.py
│   ├── remove.py
│   └── ... (інші)
├── services/             # Логіка парсингу, роботи з API, бізнес-логіка
│   ├── __init__.py
│   ├── olx_parser.py
│   └── ... (інші)
├── storage/              # Робота з файлами, БД, кешем
│   ├── __init__.py
│   ├── json_storage.py
│   └── ... (інші)
├── requirements.txt      # Залежності
└── README.md             # Опис проєкту
команди:
/start - Запустити бота
/add - Додати нове посилання для парсингу
/remove - Видалити посилання з парсингу
/help - Отримати допомогу
/parse (частота парсингу, посилання для парсингу(вибір з списку доданих посилань)) - Запустити парсинг
/stop(посилання для парсингу(вибір з списку доданих посилань)) - Зупинити парсинг
/url - Отримати список всіх посилань для парсингу з статусами 
/settings - керування налаштуваннями бота (частота парсингу, статус парсингу)
вимоги:
1)Формат users.json:
{
    "user_id": {
        "username": "username",
        "links": [
            {
                "url": "https://example.com",
                "status": "active"
            },
            ...
        ]
    }
}
2)перевірка дублювання:
- Перед додаванням нового посилання перевіряємо, чи вже існує таке посилання у списку користувача, чи існує такий користувач.
3)асинхронність.
4)логування:
- Логування всіх дій бота (додавання/видалення посилань, парсинг, помилки) у файл logs/bot.log.
5)обробка помилок:
- Обробка помилок при парсингу (наприклад, недоступність сайту) з відповідним повідомленням користувачу.
